// Autogenerated from development/constructs/conditional_construct.i

package ideal.development.constructs;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;

import javax.annotation.Nullable;

public class conditional_construct extends base_construct {
  public final construct cond_expr;
  public final construct then_expr;
  public final @Nullable construct else_expr;
  public final boolean is_statement;
  public conditional_construct(final construct cond_expr, final construct then_expr, final @Nullable construct else_expr, final boolean is_statement, final origin generated_origin) {
    super(generated_origin);
    assert cond_expr != null;
    this.cond_expr = cond_expr;
    assert then_expr != null;
    this.then_expr = then_expr;
    this.else_expr = else_expr;
    this.is_statement = is_statement;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append(this.cond_expr);
    generated_result.append(this.then_expr);
    if (this.else_expr != null)
      generated_result.append((construct) this.else_expr);
    return generated_result;
  }
}
