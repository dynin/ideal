// Autogenerated from development/constructs/list_construct.i

package ideal.development.constructs;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;

public class list_construct extends base_construct {
  public final readonly_list<construct> the_elements;
  public final grouping_type grouping;
  public final boolean has_trailing_comma;
  public boolean is_simple_grouping() {
    return this.the_elements.size() == 1 && !this.has_trailing_comma;
  }
  public list_construct(final readonly_list<construct> the_elements, final grouping_type grouping, final boolean has_trailing_comma, final origin generated_origin) {
    super(generated_origin);
    assert the_elements != null;
    this.the_elements = the_elements;
    assert grouping != null;
    this.grouping = grouping;
    this.has_trailing_comma = has_trailing_comma;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append_all(this.the_elements);
    return generated_result;
  }
}
