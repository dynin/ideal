// Autogenerated from development/constructs/procedure_construct.i

package ideal.development.constructs;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;

import javax.annotation.Nullable;

public class procedure_construct extends base_construct {
  public final readonly_list<annotation_construct> annotations;
  public final @Nullable construct ret;
  public final action_name name;
  public final @Nullable readonly_list<construct> parameters;
  public final readonly_list<annotation_construct> post_annotations;
  public final @Nullable construct body;
  public @Override string to_string() {
    return utilities.describe(this, this.name);
  }
  public procedure_construct(final readonly_list<annotation_construct> annotations, final @Nullable construct ret, final action_name name, final @Nullable readonly_list<construct> parameters, final readonly_list<annotation_construct> post_annotations, final @Nullable construct body, final origin generated_origin) {
    super(generated_origin);
    assert annotations != null;
    this.annotations = annotations;
    this.ret = ret;
    assert name != null;
    this.name = name;
    this.parameters = parameters;
    assert post_annotations != null;
    this.post_annotations = post_annotations;
    this.body = body;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append_all((readonly_list<construct>) (readonly_list) this.annotations);
    if (this.ret != null)
      generated_result.append((construct) this.ret);
    if (this.parameters != null)
      generated_result.append_all((readonly_list<construct>) this.parameters);
    generated_result.append_all((readonly_list<construct>) (readonly_list) this.post_annotations);
    if (this.body != null)
      generated_result.append((construct) this.body);
    return generated_result;
  }
}
