// Autogenerated from development/constructs/supertype_construct.i

package ideal.development.constructs;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;

import javax.annotation.Nullable;

public class supertype_construct extends base_construct {
  public final readonly_list<annotation_construct> annotations;
  public final @Nullable type_flavor subtype_flavor;
  public final subtype_tag tag;
  public final readonly_list<construct> type_constructs;
  public supertype_construct(final readonly_list<annotation_construct> annotations, final @Nullable type_flavor subtype_flavor, final subtype_tag tag, final readonly_list<construct> type_constructs, final origin generated_origin) {
    super(generated_origin);
    assert annotations != null;
    this.annotations = annotations;
    this.subtype_flavor = subtype_flavor;
    assert tag != null;
    this.tag = tag;
    assert type_constructs != null;
    this.type_constructs = type_constructs;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append_all((readonly_list<construct>) (Object) this.annotations);
    generated_result.append_all(this.type_constructs);
    return generated_result;
  }
}
