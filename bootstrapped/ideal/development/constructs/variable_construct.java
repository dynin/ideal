// Autogenerated from development/constructs/variable_construct.i

package ideal.development.constructs;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;

import javax.annotation.Nullable;

public class variable_construct extends base_construct {
  public final readonly_list<annotation_construct> annotations;
  public final @Nullable construct variable_type;
  public final @Nullable action_name name;
  public final readonly_list<annotation_construct> post_annotations;
  public final @Nullable construct init;
  public @Override string to_string() {
    return utilities.describe(this, this.name);
  }
  public variable_construct(final readonly_list<annotation_construct> annotations, final @Nullable construct variable_type, final @Nullable action_name name, final readonly_list<annotation_construct> post_annotations, final @Nullable construct init, final origin generated_origin) {
    super(generated_origin);
    assert annotations != null;
    this.annotations = annotations;
    this.variable_type = variable_type;
    this.name = name;
    assert post_annotations != null;
    this.post_annotations = post_annotations;
    this.init = init;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append_all((readonly_list<construct>) (readonly_list) this.annotations);
    if (this.variable_type != null)
      generated_result.append((construct) this.variable_type);
    generated_result.append_all((readonly_list<construct>) (readonly_list) this.post_annotations);
    if (this.init != null)
      generated_result.append((construct) this.init);
    return generated_result;
  }
}
