// Autogenerated from development/documenters/doc_comment_processor.i

package ideal.development.documenters;

import ideal.library.elements.*;
import ideal.library.characters.*;
import ideal.library.texts.*;
import ideal.runtime.elements.*;
import ideal.runtime.texts.*;
import ideal.library.channels.output;
import ideal.machine.characters.normal_handler;

import javax.annotation.Nullable;

public class doc_comment_processor {
  public static @Nullable string saved_error;
  public static text_fragment parse(final string source) {
    final doc_parser parser = new doc_parser(doc_comment_processor.get_grammar(), new procedure1<Void, string>() {
      @Override public Void call(string first) {
        doc_comment_processor.report_error(first);
        return null;
      }
    });
    final text_fragment result = parser.parse_content(source);
    assert doc_comment_processor.saved_error == null;
    return result;
  }
  private static @Nullable doc_grammar generated_get_grammar_cache;
  public static doc_grammar get_grammar() {
    @Nullable doc_grammar result = doc_comment_processor.generated_get_grammar_cache;
    if (result == null) {
      result = doc_comment_processor.generated_get_grammar_compute();
      doc_comment_processor.generated_get_grammar_cache = result;
    }
    return result;
  }
  private static doc_grammar generated_get_grammar_compute() {
    return new doc_grammar(normal_handler.instance);
  }
  private static void report_error(final string error_message) {
    doc_comment_processor.saved_error = error_message;
  }
  public doc_comment_processor() { }
}
