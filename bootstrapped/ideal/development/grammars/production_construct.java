// Autogenerated from development/grammars/production_construct.i

package ideal.development.grammars;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;
import ideal.development.constructs.*;
import ideal.development.scanners.*;

public class production_construct extends base_construct implements stringable {
  public final name_construct the_name;
  public final readonly_list<rule_construct> rules;
  public @Override string to_string() {
    return utilities.describe(this, this.the_name);
  }
  public production_construct(final name_construct the_name, final readonly_list<rule_construct> rules, final origin generated_origin) {
    super(generated_origin);
    assert the_name != null;
    this.the_name = the_name;
    assert rules != null;
    this.rules = rules;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append(this.the_name);
    generated_result.append_all((readonly_list<construct>) (Object) this.rules);
    return generated_result;
  }
}
