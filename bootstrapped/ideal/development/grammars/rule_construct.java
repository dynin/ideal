// Autogenerated from development/grammars/rule_construct.i

package ideal.development.grammars;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;
import ideal.development.constructs.*;
import ideal.development.scanners.*;

import javax.annotation.Nullable;

public class rule_construct extends base_construct {
  public final readonly_list<term_construct> terms;
  public final @Nullable construct actions;
  public rule_construct(final readonly_list<term_construct> terms, final @Nullable construct actions, final origin generated_origin) {
    super(generated_origin);
    assert terms != null;
    this.terms = terms;
    this.actions = actions;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append_all((readonly_list<construct>) (Object) this.terms);
    if (this.actions != null)
      generated_result.append((construct) this.actions);
    return generated_result;
  }
}
