// Autogenerated from development/grammars/terminal_construct.i

package ideal.development.grammars;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.development.elements.*;
import ideal.development.names.*;
import ideal.development.constructs.*;
import ideal.development.scanners.*;

public class terminal_construct extends base_construct implements stringable {
  public final construct the_type;
  public final readonly_list<name_construct> the_names;
  public @Override string to_string() {
    return utilities.describe(this, this.the_names.first());
  }
  public terminal_construct(final construct the_type, final readonly_list<name_construct> the_names, final origin generated_origin) {
    super(generated_origin);
    assert the_type != null;
    this.the_type = the_type;
    assert the_names != null;
    this.the_names = the_names;
  }
  public @Override readonly_list<construct> children() {
    final base_list<construct> generated_result = new base_list<construct>();
    generated_result.append(this.the_type);
    generated_result.append_all((readonly_list<construct>) (Object) this.the_names);
    return generated_result;
  }
}
