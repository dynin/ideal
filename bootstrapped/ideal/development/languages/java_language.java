// Autogenerated from development/languages/java_language.i

package ideal.development.languages;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.development.names.*;
import ideal.development.constructs.*;
import ideal.development.modifiers.*;
import static ideal.development.modifiers.general_modifier.*;

public class java_language {
  public static final set<modifier_kind> supported_modifiers = new hash_set<modifier_kind>();
  public static final set<modifier_kind> supported_annotations = new hash_set<modifier_kind>();
  public static order<annotation_construct> annotation_order;
  static {
    final immutable_list<modifier_kind> modifiers_list = new base_immutable_list<modifier_kind>(new ideal.machine.elements.array<modifier_kind>(new modifier_kind[]{ access_modifier.public_modifier, access_modifier.protected_modifier, access_modifier.private_modifier, general_modifier.static_modifier, general_modifier.final_modifier, general_modifier.abstract_modifier, general_modifier.synchronized_modifier, general_modifier.volatile_modifier, general_modifier.transient_modifier, general_modifier.native_modifier }));
    final immutable_list<modifier_kind> annotations_list = new base_immutable_list<modifier_kind>(new ideal.machine.elements.array<modifier_kind>(new modifier_kind[]{ general_modifier.override_modifier, general_modifier.nullable_modifier, general_modifier.dont_display_modifier }));
    java_language.supported_annotations.add_all(annotations_list);
    final base_list<modifier_kind> all_modifiers = new base_list<modifier_kind>();
    all_modifiers.append_all(modifiers_list);
    all_modifiers.append_all(annotations_list);
    java_language.supported_modifiers.add_all(all_modifiers);
    java_language.annotation_order = new annotation_list_order(all_modifiers);
  }
}
