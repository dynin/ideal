// Autogenerated from development/names/common_names.i

package ideal.development.names;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.development.symbols.base_symbols;

public class common_names {
  public static final simple_name INSTANCE_NAME = simple_name.make(new base_string("instance"));
  private static final simple_name FIRST = simple_name.make(new base_string("first"));
  private static final simple_name SECOND = simple_name.make(new base_string("second"));
  private static final simple_name THIRD = simple_name.make(new base_string("third"));
  public static simple_name make_numbered_name(final Integer index) {
    if (ideal.machine.elements.runtime_util.values_equal(index, 0)) {
      return common_names.FIRST;
    } else if (ideal.machine.elements.runtime_util.values_equal(index, 1)) {
      return common_names.SECOND;
    } else if (ideal.machine.elements.runtime_util.values_equal(index, 2)) {
      return common_names.THIRD;
    } else {
      utilities.panic(ideal.machine.elements.runtime_util.concatenate(new base_string("Don\'t know how to count up to "), index));
      return null;
    }
  }
}
