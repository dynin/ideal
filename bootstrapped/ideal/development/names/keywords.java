// Autogenerated from development/names/keywords.i

package ideal.development.names;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.development.symbols.base_symbols;

public class keywords {
  public final static keyword THIS = new keyword(new base_string("this"));
  public final static keyword SUPER = new keyword(new base_string("super"));
  public final static keyword NEW = new keyword(new base_string("new"));
  public final static keyword OR = new keyword(new base_string("or"), base_symbols.OR);
  public final static keyword AS = new keyword(new base_string("as"), base_symbols.AS);
  public final static keyword IS = new keyword(new base_string("is"), base_symbols.IS);
  public final static keyword IS_NOT = new keyword(new base_string("is_not"), base_symbols.IS_NOT);
  public final static keyword ASSERT = new keyword(new base_string("assert"), base_symbols.ASSERT);
  public final static keyword RETURN = new keyword(new base_string("return"), base_symbols.RETURN);
  public final static keyword IF = new keyword(new base_string("if"), base_symbols.IF);
  public final static keyword ELSE = new keyword(new base_string("else"), base_symbols.ELSE);
  public final static keyword LOOP = new keyword(new base_string("loop"), base_symbols.LOOP);
  public final static keyword WHILE = new keyword(new base_string("while"), base_symbols.WHILE);
  public final static keyword FOR = new keyword(new base_string("for"), base_symbols.FOR);
  public final static keyword IMPORT = new keyword(new base_string("import"), base_symbols.IMPORT);
  public final static keyword USE = new keyword(new base_string("use"), base_symbols.USE);
  public final static keyword TARGET = new keyword(new base_string("target"), base_symbols.TARGET);
  public final static keyword PLEASE = new keyword(new base_string("please"), base_symbols.PLEASE);
}
