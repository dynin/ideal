// Autogenerated from development/names/keywords.i

package ideal.development.names;

import ideal.library.elements.*;
import ideal.library.characters.*;
import ideal.runtime.elements.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.machine.characters.unicode_handler;

public class keywords {
  public static final keyword RESERVED = new keyword(new base_string("reserved"));
  public static final keyword THIS = new keyword(new base_string("this"));
  public static final keyword SUPER = new keyword(new base_string("super"));
  public static final keyword NEW = new keyword(new base_string("new"));
  public static final keyword OR = new keyword(new base_string("or"));
  public static final keyword IS = new keyword(new base_string("is"));
  public static final keyword IS_NOT = new keyword(new base_string("is_not"));
  public static final keyword RETURN = new keyword(new base_string("return"));
  public static final keyword IF = new keyword(new base_string("if"));
  public static final keyword ELSE = new keyword(new base_string("else"));
  public static final keyword LOOP = new keyword(new base_string("loop"));
  public static final keyword WHILE = new keyword(new base_string("while"));
  public static final keyword FOR = new keyword(new base_string("for"));
  public static final keyword IMPORT = new keyword(new base_string("import"));
  public static final keyword SWITCH = new keyword(new base_string("switch"));
  public static final keyword CASE = new keyword(new base_string("case"));
  public static final keyword DEFAULT = new keyword(new base_string("default"));
  public static final keyword USE = new keyword(new base_string("use"));
  public static final keyword TARGET = new keyword(new base_string("target"));
  public static final keyword PLEASE = new keyword(new base_string("please"));
  public static final keyword GRAMMAR = new keyword(new base_string("grammar"));
  public static final keyword TERMINAL = new keyword(new base_string("terminal"));
  public static final keyword NONTERMINAL = new keyword(new base_string("nonterminal"));
}
