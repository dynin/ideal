// Autogenerated from development/names/operator_type.i

package ideal.development.names;

import ideal.library.elements.*;
import ideal.runtime.elements.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.development.symbols.base_symbols;

public class operator_type implements identifier, readonly_displayable {
  public final string name;
  public final int arity;
  private operator_type(final string name, final int arity) {
    this.name = name;
    this.arity = arity;
  }
  public @Override string to_string() {
    return name;
  }
  public @Override string display() {
    return to_string();
  }
  public static final operator_type PREFIX = new operator_type(new base_string("prefix"), 1);
  public static final operator_type POSTFIX = new operator_type(new base_string("postfix"), 1);
  public static final operator_type INFIX = new operator_type(new base_string("infix"), 2);
  public static final operator_type ASSIGNMENT = new operator_type(new base_string("assignment"), 2);
}
