// Autogenerated from development/names/punctuation.i

package ideal.development.names;

import ideal.library.elements.*;
import ideal.library.characters.*;
import ideal.runtime.elements.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.machine.characters.unicode_handler;

public class punctuation {
  public static final quote_type SINGLE_QUOTE = new quote_type('\'', new base_string("SINGLE_QUOTE"));
  public static final quote_type DOUBLE_QUOTE = new quote_type('\"', new base_string("DOUBLE_QUOTE"));
  public static final punctuation_type HASH = new punctuation_type(new base_string("#"), new base_string("HASH"));
  public static final punctuation_type ELLIPSIS = new punctuation_type(new base_string("..."), new base_string("ELLIPSIS"));
  public static final punctuation_type OPEN_PARENTHESIS = new punctuation_type(new base_string("("), new base_string("OPEN_PARENTHESIS"));
  public static final punctuation_type CLOSE_PARENTHESIS = new punctuation_type(new base_string(")"), new base_string("CLOSE_PARENTHESIS"));
  public static final punctuation_type OPEN_BRACKET = new punctuation_type(new base_string("["), new base_string("OPEN_BRACKET"));
  public static final punctuation_type CLOSE_BRACKET = new punctuation_type(new base_string("]"), new base_string("CLOSE_BRACKET"));
  public static final punctuation_type OPEN_BRACE = new punctuation_type(new base_string("{"), new base_string("OPEN_BRACE"));
  public static final punctuation_type CLOSE_BRACE = new punctuation_type(new base_string("}"), new base_string("CLOSE_BRACE"));
  public static final punctuation_type DOT = new punctuation_type(new base_string("."), new base_string("DOT"));
  public static final punctuation_type COMMA = new punctuation_type(new base_string(","), new base_string("COMMA"));
  public static final punctuation_type COLON = new punctuation_type(new base_string(":"), new base_string("COLON"));
  public static final punctuation_type SEMICOLON = new punctuation_type(new base_string(";"), new base_string("SEMICOLON"));
  public static final punctuation_type EQUALS_GREATER_THAN = new punctuation_type(new base_string("=>"), new base_string("EQUALS_GREATER_THAN"));
  public static final punctuation_type QUESTION_MARK = new punctuation_type(new base_string("?"), new base_string("QUESTION_MARK"));
  public static final punctuation_type EQUALS = new punctuation_type(new base_string("="), new base_string("EQUALS"));
  public static final punctuation_type ASTERISK = new punctuation_type(new base_string("*"), new base_string("ASTERISK"));
  public static final punctuation_type SLASH = new punctuation_type(new base_string("/"), new base_string("SLASH"));
  public static final punctuation_type PERCENT = new punctuation_type(new base_string("%"), new base_string("PERCENT"));
  public static final punctuation_type PLUS = new punctuation_type(new base_string("+"), new base_string("PLUS"));
  public static final punctuation_type PLUS_PLUS = new punctuation_type(new base_string("++"), new base_string("PLUS_PLUS"));
  public static final punctuation_type PLUS_PLUS_EQUALS = new punctuation_type(new base_string("++="), new base_string("PLUS_PLUS_EQUALS"));
  public static final punctuation_type MINUS = new punctuation_type(new base_string("-"), new base_string("MINUS"));
  public static final punctuation_type EQUALS_EQUALS = new punctuation_type(new base_string("=="), new base_string("EQUALS_EQUALS"));
  public static final punctuation_type EXCLAMATION_MARK = new punctuation_type(new base_string("!"), new base_string("EXCLAMATION_MARK"));
  public static final punctuation_type EXCLAMATION_MARK_EQUALS = new punctuation_type(new base_string("!="), new base_string("EXCLAMATION_MARK_EQUALS"));
  public static final punctuation_type LESS_THAN = new punctuation_type(new base_string("<"), new base_string("LESS_THAN"));
  public static final punctuation_type GREATER_THAN = new punctuation_type(new base_string(">"), new base_string("GREATER_THAN"));
  public static final punctuation_type LESS_THAN_EQUALS = new punctuation_type(new base_string("<="), new base_string("LESS_THAN_EQUALS"));
  public static final punctuation_type GREATER_THAN_EQUALS = new punctuation_type(new base_string(">="), new base_string("GREATER_THAN_EQUALS"));
  public static final punctuation_type LESS_THAN_EQUALS_GREATER_THAN = new punctuation_type(new base_string("<=>"), new base_string("LESS_THAN_EQUALS_GREATER_THAN"));
  public static final punctuation_type DOT_GREATER_THAN = new punctuation_type(new base_string(".>"), new base_string("DOT_GREATER_THAN"));
  public static final punctuation_type EXCLAMATION_GREATER_THAN = new punctuation_type(new base_string("!>"), new base_string("EXCLAMATION_GREATER_THAN"));
  public static final punctuation_type QUESTION_MARK_GREATER_THAN = new punctuation_type(new base_string("?>"), new base_string("QUESTION_MARK_GREATER_THAN"));
  public static final punctuation_type MINUS_MINUS = new punctuation_type(new base_string("--"), new base_string("MINUS_MINUS"));
  public static final punctuation_type AMPERSAND = new punctuation_type(new base_string("&"), new base_string("AMPERSAND"));
  public static final punctuation_type CARET = new punctuation_type(new base_string("^"), new base_string("CARET"));
  public static final punctuation_type VERTICAL_BAR = new punctuation_type(new base_string("|"), new base_string("VERTICAL_BAR"));
  public static final punctuation_type AMPERSAND_AMPERSAND = new punctuation_type(new base_string("&&"), new base_string("AMPERSAND_AMPERSAND"));
  public static final punctuation_type VERTICAL_BAR_VERTICAL_BAR = new punctuation_type(new base_string("||"), new base_string("VERTICAL_BAR_VERTICAL_BAR"));
  public static final punctuation_type PLUS_EQUALS = new punctuation_type(new base_string("+="), new base_string("PLUS_EQUALS"));
  public static final punctuation_type MINUS_EQUALS = new punctuation_type(new base_string("-="), new base_string("MINUS_EQUALS"));
  public static final punctuation_type ASTERISK_EQUALS = new punctuation_type(new base_string("*="), new base_string("ASTERISK_EQUALS"));
  public static final punctuation_type MINUS_MINUS_MINUS = new punctuation_type(new base_string("---"), new base_string("MINUS_MINUS_MINUS"));
  public static final punctuation_type COLON_COLON_EQUALS = new punctuation_type(new base_string("::="), new base_string("COLON_COLON_EQUALS"));
}
