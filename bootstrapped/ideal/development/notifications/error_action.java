// Autogenerated from development/notifications/error_action.i

package ideal.development.notifications;

import ideal.library.elements.*;
import ideal.library.channels.*;
import ideal.library.texts.*;
import ideal.library.messages.*;
import ideal.library.reflections.*;
import ideal.runtime.elements.*;
import ideal.runtime.texts.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.development.origins.*;
import ideal.development.types.*;
import ideal.development.jumps.panic_value;

import javax.annotation.Nullable;

public class error_action extends error_signal implements deeply_immutable_data, action, abstract_value {
  public error_action(final error_signal signal) {
    super(signal.cause, signal.is_cascading);
  }
  public @Override type type_bound() {
    return common_types.error_type();
  }
  public @Override action to_action(final origin the_origin) {
    return this;
  }
  public @Override abstract_value result() {
    return this;
  }
  public @Override boolean is_parametrizable() {
    return false;
  }
  public @Override @Nullable declaration get_declaration() {
    return null;
  }
  public @Override boolean has_side_effects() {
    return false;
  }
  public @Override action combine(final action from, final origin the_origin) {
    return this;
  }
  public @Override entity_wrapper execute(final entity_wrapper from_entity, final execution_context context) {
    return new panic_value(new base_string("Attempting to execute error_signal"));
  }
}
