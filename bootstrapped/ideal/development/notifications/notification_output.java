// Autogenerated from development/notifications/notification_output.i

package ideal.development.notifications;

import ideal.library.elements.*;
import ideal.library.channels.*;
import ideal.library.texts.*;
import ideal.library.messages.*;
import ideal.library.reflections.*;
import ideal.runtime.elements.*;
import ideal.runtime.texts.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.development.origins.*;
import ideal.development.types.*;
import ideal.development.jumps.panic_value;

public class notification_output implements output<notification> {
  private final output<notification> the_output;
  private boolean error_flag;
  public notification_output(final output<notification> the_output) {
    this.the_output = the_output;
    this.error_flag = false;
  }
  public boolean has_errors() {
    return this.error_flag;
  }
  private void set_error(final notification the_notification) {
    if (!this.error_flag) {
      if (the_notification instanceof base_notification) {
        this.error_flag = ((base_notification) the_notification).the_notification_level == notification_level.ERROR;
      }
    }
  }
  public @Override void write(final notification value) {
    this.set_error(value);
    this.the_output.write(value);
  }
  public @Override void write_all(final readonly_list<notification> values) {
    {
      final readonly_list<notification> the_notification_list = values;
      for (Integer the_notification_index = 0; the_notification_index < the_notification_list.size(); the_notification_index += 1) {
        final notification the_notification = the_notification_list.get(the_notification_index);
        this.set_error(the_notification);
      }
    }
    this.the_output.write_all(values);
  }
  public @Override void sync() {
    this.the_output.sync();
  }
  public @Override void close() {
    this.the_output.close();
  }
  public @Override void teardown() {
    this.the_output.teardown();
  }
}
