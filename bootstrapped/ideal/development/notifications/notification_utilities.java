// Autogenerated from development/notifications/notification_utilities.i

package ideal.development.notifications;

import ideal.library.elements.*;
import ideal.library.channels.*;
import ideal.library.texts.*;
import ideal.library.messages.*;
import ideal.library.reflections.*;
import ideal.runtime.elements.*;
import ideal.runtime.texts.*;
import ideal.runtime.logs.*;
import ideal.development.elements.*;
import ideal.development.origins.*;
import ideal.development.types.*;
import ideal.development.jumps.panic_value;
import ideal.development.declarations.*;
import ideal.development.types.*;

import javax.annotation.Nullable;

public class notification_utilities {
  public static readonly_list<notification> to_notifications(final readonly_list<action> sources, final value_printer printer) {
    final base_list<notification> notifications = new base_list<notification>();
    for (Integer i = 0; i < sources.size(); i += 1) {
      final @Nullable declaration the_declaration = declaration_util.get_declaration(sources.get(i));
      assert the_declaration != null;
      final string result_type = printer.print_value(sources.get(i).result());
      final base_notification the_notification = new base_notification(ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(new base_string("(declaration #"), i), new base_string(": ")), result_type), new base_string(")")), the_declaration);
      notifications.append(the_notification);
    }
    return notifications;
  }
  public static error_signal cant_promote(final abstract_value from, final type target_type, final origin the_origin) {
    final base_value_printer printer = base_value_printer.instance;
    return new error_signal(ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(new base_string("Can\'t promote "), printer.print_value(from)), new base_string(" to ")), printer.print_value(target_type)), the_origin);
  }
}
