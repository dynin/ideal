// Autogenerated from development/scanners/base_token.i

package ideal.development.scanners;

import ideal.library.elements.*;
import ideal.library.characters.*;
import ideal.library.patterns.*;
import ideal.runtime.elements.*;
import ideal.runtime.characters.*;
import ideal.runtime.patterns.*;
import ideal.runtime.logs.*;
import ideal.machine.characters.*;
import ideal.machine.channels.string_writer;
import ideal.development.elements.*;
import ideal.development.names.*;
import ideal.development.notifications.*;
import ideal.development.origins.*;
import ideal.development.comments.*;
import ideal.development.literals.*;
import ideal.development.modifiers.*;
import ideal.development.constructs.constraint_category;
import ideal.development.jumps.jump_category;

public class base_token<payload_type> extends debuggable implements token {
  private final token_type the_type;
  private final payload_type the_payload;
  private final origin the_origin;
  public base_token(final token_type the_type, final payload_type the_payload, final origin the_origin) {
    assert the_payload != null;
    this.the_type = the_type;
    this.the_payload = the_payload;
    this.the_origin = the_origin;
  }
  public @Override origin deeper_origin() {
    return this.the_origin;
  }
  public @Override token_type type() {
    return this.the_type;
  }
  public @Override payload_type payload() {
    return this.the_payload;
  }
  public @Override string to_string() {
    if (this.the_origin instanceof text_origin) {
      return ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(this.the_type, new base_string(":\"")), ((text_origin) this.the_origin).image());
    } else {
      return ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(new base_string("["), this.the_type), new base_string("]"));
    }
  }
}
