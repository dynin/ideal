// Autogenerated from runtime/channels/output_transformer.i

package ideal.runtime.channels;

import ideal.library.elements.*;
import ideal.library.channels.*;
import ideal.runtime.elements.*;

public class output_transformer<source_type, destination_type> implements output<source_type> {
  private final function1<destination_type, source_type> the_function;
  private final output<destination_type> the_output;
  public output_transformer(final function1<destination_type, source_type> the_function, final output<destination_type> the_output) {
    this.the_function = the_function;
    this.the_output = the_output;
  }
  public @Override void write(final source_type value) {
    this.the_output.write(this.the_function.call(value));
  }
  public @Override void write_all(final readonly_list<source_type> values) {
    final base_list<destination_type> transformed_values = new base_list<destination_type>();
    {
      final readonly_list<source_type> value_list = values;
      for (Integer value_index = 0; value_index < value_list.size(); value_index += 1) {
        final source_type value = value_list.get(value_index);
        transformed_values.append(this.the_function.call(value));
      }
    }
    this.the_output.write_all(transformed_values);
  }
  public @Override void sync() {
    this.the_output.sync();
  }
  public @Override void close() {
    this.the_output.close();
  }
}
