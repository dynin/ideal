// Autogenerated from runtime/elements/base_immutable_list.i

package ideal.runtime.elements;

import ideal.library.elements.*;
import ideal.machine.elements.runtime_util;
import ideal.machine.elements.array;

public class base_immutable_list<element_type> extends base_readonly_list<element_type> implements immutable_list<element_type> {
  protected base_immutable_list(final base_readonly_list.list_state<element_type> state) {
    super(state);
    state.writable = false;
  }
  public base_immutable_list(final array<element_type> state) {
    super(new base_readonly_list.list_state<element_type>(state));
  }
  public @Override immutable_list<element_type> frozen_copy() {
    return this;
  }
  public @Override immutable_list<element_type> reverse() {
    if (this.size() <= 1) {
      return this;
    }
    final base_readonly_list.list_state<element_type> reversed = new base_readonly_list.list_state<element_type>(this.size());
    for (int i = 0; i < this.size(); i += 1) {
      final int new_index = this.size() - 1 - i;
      assert new_index >= 0;
      reversed.the_elements.set(new_index, this.state.the_elements.at(i).get());
    }
    reversed.size = this.size();
    return new base_immutable_list<element_type>(reversed);
  }
}
