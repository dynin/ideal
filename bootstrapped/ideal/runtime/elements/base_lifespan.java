// Autogenerated from runtime/elements/base_lifespan.i

package ideal.runtime.elements;

import ideal.library.elements.*;

public class base_lifespan implements lifespan {
  private final hash_set<closeable> registered = new hash_set<closeable>();
  public base_lifespan(final lifespan parent) {
    parent.register(this);
  }
  public @Override void register(final closeable the_closeable) {
    this.registered.add(the_closeable);
  }
  public @Override void close() {
    {
      final readonly_list<closeable> the_closeable_list = this.registered.elements();
      for (Integer the_closeable_index = 0; the_closeable_index < the_closeable_list.size(); the_closeable_index += 1) {
        final closeable the_closeable = the_closeable_list.get(the_closeable_index);
        the_closeable.close();
      }
    }
    this.registered.clear();
  }
  public @Override void teardown() {
    {
      final readonly_list<closeable> the_closeable_list = this.registered.elements();
      for (Integer the_closeable_index = 0; the_closeable_index < the_closeable_list.size(); the_closeable_index += 1) {
        final closeable the_closeable = the_closeable_list.get(the_closeable_index);
        the_closeable.teardown();
      }
    }
    this.registered.clear();
  }
  public @Override lifespan make_sub_lifespan() {
    return new base_lifespan(this);
  }
}
