// Autogenerated from runtime/logs/test_display.i

package ideal.runtime.logs;

import ideal.library.elements.*;
import ideal.library.texts.*;
import ideal.library.messages.*;
import ideal.runtime.elements.*;
import ideal.runtime.texts.*;
import ideal.machine.elements.runtime_util;
import ideal.machine.channels.string_writer;

import javax.annotation.Nullable;
import ideal.machine.annotations.dont_display;

public class test_display {
  public static class my_data implements data {
    public final string foo;
    public final string bar;
    public final Integer baz;
    public my_data(final string foo, final string bar, final Integer baz) {
      this.foo = foo;
      this.bar = bar;
      this.baz = baz;
    }
  }
  public void test_simple_display() {
    final test_display.my_data data_object = new test_display.my_data(new base_string("aaa"), new base_string("bbb"), 68);
    final string_writer the_writer = new string_writer();
    final plain_formatter the_formatter = new plain_formatter(the_writer);
    the_formatter.write(runtime_util.display(data_object));
    assert runtime_util.values_equal(new base_string("my_data {\n  foo: \"aaa\"\n  bar: \"bbb\"\n  baz: 68\n}\n"), the_writer.elements());
  }
  public static class my_data2 implements data {
    public final string foo;
    public @dont_display final @Nullable string bar;
    public @dont_display final Integer baz;
    public my_data2(final string foo, final @Nullable string bar, final Integer baz) {
      this.foo = foo;
      this.bar = bar;
      this.baz = baz;
    }
  }
  public void test_display_with_annotations() {
    final test_display.my_data2 data_object = new test_display.my_data2(new base_string("aaa"), null, 68);
    final string_writer the_writer = new string_writer();
    final plain_formatter the_formatter = new plain_formatter(the_writer);
    the_formatter.write(runtime_util.display(data_object));
    assert runtime_util.values_equal(new base_string("my_data2 {\n  foo: \"aaa\"\n}\n"), the_writer.elements());
  }
  public test_display() { }
  public void run_all_tests() {
    runtime_util.start_test(new base_string("test_display.test_simple_display"));
    this.test_simple_display();
    runtime_util.end_test();
    runtime_util.start_test(new base_string("test_display.test_display_with_annotations"));
    this.test_display_with_annotations();
    runtime_util.end_test();
  }
}
