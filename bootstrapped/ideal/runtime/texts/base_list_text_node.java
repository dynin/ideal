// Autogenerated from runtime/texts/base_list_text_node.i

package ideal.runtime.texts;

import ideal.library.elements.*;
import ideal.library.texts.*;
import ideal.runtime.elements.*;
import ideal.library.channels.output;

public class base_list_text_node extends debuggable implements list_text_node {
  private final immutable_list<text_node> the_nodes;
  public base_list_text_node(final readonly_list<text_node> the_nodes) {
    this.the_nodes = the_nodes.frozen_copy();
  }
  public static list_text_node make(final text_node first, final text_node second) {
    final list<text_node> result = new base_list<text_node>();
    result.append(first);
    result.append(second);
    return new base_list_text_node(result);
  }
  public static list_text_node make(final text_node first, final text_node second, final text_node third) {
    final list<text_node> result = new base_list<text_node>();
    result.append(first);
    result.append(second);
    result.append(third);
    return new base_list_text_node(result);
  }
  public @Override immutable_list<text_node> nodes() {
    return the_nodes;
  }
  public @Override string to_string() {
    return new base_string("base_list_text_node...");
  }
}
