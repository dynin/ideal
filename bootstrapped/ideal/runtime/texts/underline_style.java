// Autogenerated from runtime/texts/underline_style.i

package ideal.runtime.texts;

import ideal.library.elements.*;
import ideal.library.texts.*;
import ideal.runtime.elements.*;
import ideal.library.channels.output;

public class underline_style extends debuggable implements deeply_immutable_data {
  public static dictionary<element_id, underline_style> all_styles;
  public final element_id style_id;
  public final char display_character;
  private underline_style(final element_id style_id, final char display_character) {
    this.style_id = style_id;
    this.display_character = display_character;
  }
  private static void register(final underline_style style) {
    underline_style.all_styles.put(style.style_id, style);
  }
  public @Override string to_string() {
    return ideal.machine.elements.runtime_util.concatenate(ideal.machine.elements.runtime_util.concatenate(this.style_id, new base_string(" -> ")), this.display_character);
  }
  private static final char CARET = '^';
  private static final char DASH = '-';
  static {
    underline_style.all_styles = new list_dictionary<element_id, underline_style>();
    underline_style.register(new underline_style(text_library.UNDERLINE, underline_style.CARET));
    underline_style.register(new underline_style(text_library.UNDERLINE2, underline_style.DASH));
  }
}
